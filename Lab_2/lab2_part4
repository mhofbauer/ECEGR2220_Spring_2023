#Hofbauer Lab1 part4
.data
A:	.word	0, 0, 0, 0, 0
B:	.word	1, 2, 4, 8, 16
.text
main:
la	a0, A		#loads address of A into a0
la	a1, B		#loads address of B into a1

add	a2,zero,zero	#int i = 0

#for loop

addi	a3,zero,5	#parameter for i
addi	a4,zero,4	#Putting 4bytes in register for work in the loop
startloop:
blt	a2,a3,loop	# if (i<5) go to loop
j endloop

loop:
mul	t1,a2,a4	#each element is 4 bytes long so multiple of 4 is used in indexing
add	t2,t1,a1	#loads address of B with an offest of i bytes (t1 holds multiples of bytes)
add	t3,t1,a0	#loads address of A with an offest into t3

lw	t4,0(t2)	#loads the value of B[i]
addi	t4,t4,-1	#subtracts 1 from the value of B[i]
sw	t4,0(t3)	#saves B[i}-1 into A[i]

#testing 
lw	a7,0(t3)

addi	a2,a2,1		#i++
j startloop			#restarts loop

endloop:

addi a2,a2,-1

#while loop

condition:
bge 	a2,zero,while 		#if condition is true go to while loop
j end_while			#otherwise leave loop	  

while:

mul	t1,a2,a4	#each element is 4 bytes long so multiple of 4 is used in indexing
add	t2,t1,a1	#loads address of B with an offest of i bytes (t1 holds multiples of bytes)
add	t3,t1,a0	#loads address of A with an offest into t3

lw	t4,0(t2)	#loads the value of B[i]
lw	t5,0(t3)	#loads the value of A[i}

add	t5,t4,t5	#adds A[i}+B[i]
addi	t6,zero,2	#puts 2 into t6
mul	t5,t5,t6	#multiples by 2
sw	t5,0(t3)	#saves (A[i}+B[i])*2 into A[i]

addi	a2,a2,-1		#i--
j condition			#check condition again

end_while:

li  a7,10       #system call for an exit
ecall

